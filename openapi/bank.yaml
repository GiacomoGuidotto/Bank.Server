openapi: 3.0.3
info:
  title: Bank Management System
  version: 1.0.0
  description: |
    The Bank Management System API supports the data flow and transactions of an Online Bank.

    The API includes the following capabilities and operation:

    __Demilitarized Zone:__
    - Authenticate
    - Create a new user

    __Militarized Zone:__

    - __User Management:__
      - Get a specific user information
      - Delete a specific user

    - __Log out__

    - __Deposits Management:__
      - Get user's list of deposits
      - Get a specific deposit information
      - Create a new deposit
      - Close (freeze) a specific deposit
      - "Deposit" money in a specific deposit
      - "Withdraw" money from a specific deposit

    - __Transaction Histories Management:__
      - Get a transaction history of a specific deposit

    - __Loan Management:__
      - Get a specific loan information
      - Create a new loan for a deposit
      - Close a specific loan


    The following resource collections are offered by this API:
    - Session Token: represents the authentication token to use
    - User: represents the user data
    - Deposit: represents the data of a deposit of an account
    - Transaction History: represent the history of a deposit
    - Loan: represents the data of a loan of a deposit

paths:
  # DMZ
  /auth:
    get:
      operationId: authenticate
      summary: Get the session token
      description: Retrieve the session token with the username/password combination
      parameters:
        - name: username
          in: header
          description: the username to authenticate
          required: true
          schema:
            $ref: "#/components/schemas/userUsername"
        - name: password
          in: header
          description: the user password to authenticate
          required: true
          schema:
            $ref: "#/components/schemas/userPassword"
      responses:
        200:
          description: The user is authenticated and the token created
          content:
            application/json:
              schema:
                type: object
                properties:
                  Token:
                    $ref: "#/components/parameters/sessionToken"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
        405:
          $ref: "#/components/responses/405"

  /user:
    post:
      operationId: createUser
      summary: Create a new user
      description: create a new user using the given parameters
      parameters:
        - name: username
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/userUsername"
        - name: password
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/userPassword"
        - name: name
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/userName"
        - name: surname
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/userSurname"
      responses:
        200:
          description: The new user is been successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userObject"
        400:
          $ref: "#/components/responses/400"
        405:
          $ref: "#/components/responses/405"
        409:
          $ref: "#/components/responses/409"

    # MZ
    get:
      operationId: getUser
      summary: Get the user information
      description: Retrieve user's name, surname, IBAN from the database
      parameters:
        - $ref: "#/components/parameters/sessionToken"
      responses:
        200:
          description: the information are retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userObject"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        405:
          $ref: "#/components/responses/405"

    delete:
      operationId: closeUser
      summary: Close a specific user
      description: Make a specific user unreachable
      parameters:
        - $ref: "#/components/parameters/sessionToken"
      responses:
        200:
          description: |
            The account is successfully close.
            The Militarized Zone is close.
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        405:
          $ref: "#/components/responses/405"

  /exit:
    delete:
      operationId: closeSession
      summary: Close a specified session
      description: Make a specific session token unreachable
      parameters:
        - $ref: "#/components/parameters/sessionToken"
      responses:
        200:
          description: |
            The session is successfully close.
            The Militarized Zone is close.
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        405:
          $ref: "#/components/responses/405"

  /deposit:
    get:
      operationId: getDeposits
      summary: Get the deposits information
      description: |
        Retrieve the list of deposit's name from the database.
        If a deposit name is given, the query is filtered and
        is retrieved the specific deposit's name, amount,
        type from the database.
      parameters:
        - $ref: "#/components/parameters/sessionToken"
        - name: name
          in: header
          description: The optional filter
          required: false
          schema:
            $ref: "#/components/schemas/depositName"
      responses:
        200:
          description: |
            The list of deposits is retrieved or
            the single deposit is retrieved
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/depositObject"
                  - type: array
                    items:
                      $ref: "#/components/schemas/depositObject"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        405:
          $ref: "#/components/responses/405"

    post:
      operationId: createDeposit
      summary: Open a new deposit
      description: create a new deposit using the given parameters
      parameters:
        - $ref: "#/components/parameters/sessionToken"
        - $ref: "#/components/parameters/depositIdentifier"
        - name: type
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/depositType"
        - name: amount
          in: header
          required: false
          schema:
            $ref: "#/components/schemas/depositAmount"
      responses:
        200:
          description: The new deposit is successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/depositObject"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        405:
          $ref: "#/components/responses/405"
        406:
          $ref: "#/components/responses/406"
        409:
          $ref: "#/components/responses/409"

    delete:
      operationId: closeDeposit
      summary: Freeze a specific deposit
      description: Make a specific deposit unreachable
      parameters:
        - $ref: "#/components/parameters/sessionToken"
        - $ref: "#/components/parameters/depositIdentifier"
        - name: destination
          in: header
          description: The deposit identifier
          required: true
          schema:
            $ref: "#/components/schemas/depositName"

      responses:
        200:
          description: |
            The deposit is successfully froze.
            The new deposits list is returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/depositObject"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        405:
          $ref: "#/components/responses/405"
        406:
          $ref: "#/components/responses/406"

    put:
      operationId: updateAmount
      summary: Update the deposit amount
      description: |
        represent either a "Deposit" or a "Withdraw" of
        a quantity of money in the specific deposit
      parameters:
        - $ref: "#/components/parameters/sessionToken"
        - $ref: "#/components/parameters/depositIdentifier"
        - name: action
          in: header
          required: true
          schema:
            type: string
            enum:
              - deposit
              - withdraw
          description: |
            the identifier of the update action
        - name: amount
          in: header
          required: true
          schema:
            type: number
            minimum: 0
            description: |
              the number to add to the deposit's amount.
              It can't be negative
      responses:
        200:
          description: The "deposit" is happened successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/depositObject"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        405:
          $ref: "#/components/responses/405"
        406:
          $ref: "#/components/responses/406"

  /history:
    get:
      operationId: getHistory
      summary: get the deposit's transaction history
      description: |
        Retrieve the deposit's transaction history list:
        transaction type, amount deducted, author and timestamp
      parameters:
        - $ref: "#/components/parameters/sessionToken"
        - $ref: "#/components/parameters/depositIdentifier"
      responses:
        '200':
          description: The history is retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/transactionObject"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        405:
          $ref: "#/components/responses/405"

  /loan:
    get:
      operationId: getLoans
      summary: get the loans information
      description: |
        Retrieve the list of loan's name from the database.
        If either a loan name or the linked deposit is given,
        the query is filtered and is retrieved the specific
        loan's name, total amount of money borrowed, amount
        of money deducted monthly, the interest rate, the
        repayment day, type from the database.
      parameters:
        - $ref: "#/components/parameters/sessionToken"
        - name: name
          in: header
          description: |
            the optional loan name, working as filter
          required: false
          schema:
            $ref: "#/components/schemas/loanName"
        - name: deposit
          in: header
          description: |
            the optional linked deposit, working as filter
          required: false
          schema:
            $ref: "#/components/schemas/loanName"
      responses:
        200:
          description: |
            The list of loans is retrieved or
            the single loan is retrieved
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/loanObject"
                  - type: array
                    items:
                      $ref: "#/components/schemas/loanObject"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        405:
          $ref: "#/components/responses/405"

    post:
      operationId: createLoan
      summary: Open a new loan
      description: create a new loan using the given parameters
      parameters:
        - $ref: "#/components/parameters/sessionToken"
        - $ref: "#/components/parameters/depositIdentifier"
        - $ref: "#/components/parameters/loanIdentifier"
        - name: amountAsked
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/loanAmount"
        - name: repaymentDay
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/loanRepaymentDay"
        - name: type
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/loanType"
      responses:
        200:
          description: the new loan is successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/loanObject"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        405:
          $ref: "#/components/responses/405"

    delete:
      operationId: closeLoan
      summary: Conclude a specific loan
      description: |
        Deduct the remaining amount of money required
        from the loan
      parameters:
        - $ref: "#/components/parameters/sessionToken"
        - $ref: "#/components/parameters/loanIdentifier"
      responses:
        200:
          description: |
            The loan is successfully completed.
            The new loan list is returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/loanObject"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        405:
          $ref: "#/components/responses/405"
        406:
          $ref: "#/components/responses/406"


# =======================================================================================
components:
  parameters:
    sessionToken:
      name: token
      in: header
      description: the token used to authenticate the user
      required: true
      schema:
        $ref: "#/components/parameters/sessionToken"

    depositIdentifier:
      name: name
      in: header
      description: The deposit identifier
      required: true
      schema:
        $ref: "#/components/schemas/depositName"

    loanIdentifier:
      name: name
      in: header
      description: The loan identifier
      required: true
      schema:
        $ref: "#/components/schemas/loanName"


  responses:
    400:
      description: the parameters don't correspond to their schema
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorMessage"
    401:
      description: the session token does not exist
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorMessage"
    403:
      description: the resources doesn't belong to the user of this session token
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorMessage"
    404:
      description: the entity does not exist
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorMessage"
    405:
      description: the method used is not allowed
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorMessage"
    406:
      description: the elaboration of the request failed
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorMessage"
    409:
      description: the entity unique attributes already exist
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorMessage"


  schemas:
    # error case
    errorMessage:
      type: object
      required:
        - timestamp
        - error
        - message
        - details
      properties:
        timestamp:
          type: string
        error:
          type: string
        message:
          type: string
        details:
          type: string

    # session token
    sessionToken:
      type: string
      format: uuid
      minLength: 32
      maxLength: 32
      description: |
        the identifier of the active session

    # user's attributes
    userUsername:
      type: string
      minLength: 8
      maxLength: 64
      description: |
        The user identifier

    userPassword:
      type: string
      format: password
      minLength: 8
      maxLength: 32
      pattern: ^(?=.*\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[^\w\d\s:])([^\s]){8,32}$
      # ^
      # start of the line

      # 4 evaluation contained in (?= )
      # that assert that any character .
      # from the entire line *
      # does:

      # (?=.*\d)
      # contains a digit: \d

      # (?=.*[A-Z])
      # contains an uppercase letter: [A-Z]

      # (?=.*[a-z])
      # contains a lowercase letter: [a-z]

      # (?=.*[^\w\d\s:])
      # contains a character that is not (^)
      # a word char     (\w, equivalent to [a-zA-Z0-9])
      # or a digit      (\d, equivalent to [0-9])
      # or a whitespace (\s)
      # or ":"

      # ([^\s]){8,32}
      # this evaluation assert that the line [every
      # character that is not (^) a whitespace (\s)]
      # is of length between 8 and 32 character

      # $
      # end of the line
      # https://regex101.com/r/0bH043/1

      description: |
        The hashed password of the account

    userName:
      type: string
      minLength: 1
      maxLength: 64
      description: |
        the user's name

    userSurname:
      type: string
      minLength: 1
      maxLength: 64
      description: |
        the user's surname

    userIBAN:
      type: string
      minLength: 15
      maxLength: 32
      description: |
        the user's International Bank Address Number

    # deposit's attributes
    depositName:
      type: string
      minLength: 1
      maxLength: 64
      description: |
        the name of the deposit

    depositAmount:
      type: integer
      format: int32
      description: |
        the amount of money in the deposit

    depositType:
      type: string
      minLength: 5
      maxLength: 8
      enum:
        - standard
        # - saving
        # - fixed
      description: |
        the type of the deposit:
        - standard: the money can be withdraw anytime
        - saving: the money can be withdraw limited to a minimum amount
        - fixed: the money can be withdraw after a certain period
        only the first case will be implemented

    # transaction history's attributes
    transactionType:
      type: string
      minLength: 7
      maxLength: 8
      enum:
        - deposit
        - withdraw
      description: |
        the type of the transaction listed and made to the deposit

    transactionAmount:
      type: integer
      format: int32
      description: |
        the amount of money added or subtracted from the deposit

    transactionDate:
      type: string
      format: date-time
      description: |
        the moment that the transaction happened

    transactionAuthor:
      type: string
      minLength: 3
      maxLength: 129
      description: |
        the perpetrator of the transaction

    # loan's attributes
    loanName:
      type: string
      minLength: 1
      maxLength: 64
      description: |
        the name of the loan

    loanAmount:
      type: integer
      format: int32
      description: |
        the total amount of money borrowed from the bank

    loanInterestRate:
      type: number
      format: float
      minimum: 0.0001
      maximum: 9.9999
      description: |
        the rate for how much money are deducted each month

    loanMonthlyRate:
      type: integer
      format: int32
      description: |
        the calculated amount of money to deduct each month

    loanRepaymentDay:
      type: string
      format: date-time
      description: |
        the last date of validity of the loan

    loanType:
      type: string
      minLength: 6
      maxLength: 9
      enum:
        - secured
        # - unsecured
        # - subsided
        # - demand
      description: |
        the type of the loan:
        - secured: the loan is insured with an object in case the repayment fail
        - unsecured: the loan isn't insured, during the month the deposit can go negative
        - subsided: the loan is shared with a third party, usually a government association
        - demand: the loan is quick and with floating interest rate and flexible repayment date
        only the first case will be implemented

    # public attributes objects
    userObject:
      type: object
      required:
        - username
        - name
        - surname
        - IBAN
      properties:
        username:
          $ref: "#/components/schemas/userUsername"
        name:
          $ref: "#/components/schemas/userName"
        surname:
          $ref: "#/components/schemas/userSurname"
        IBAN:
          $ref: "#/components/schemas/userIBAN"
      description: |
        the public attributes of the user, stored in an object

    depositObject:
      type: object
      required:
        - name
        - amount
        - type
      properties:
        name:
          $ref: "#/components/schemas/depositName"
        amount:
          $ref: "#/components/schemas/depositAmount"
        type:
          $ref: "#/components/schemas/depositType"
      description: |
        the public attributes of the deposit, stored in an object

    transactionObject:
      type: object
      required:
        - type
        - amount
        - date
        - author
      properties:
        type:
          $ref: "#/components/schemas/transactionType"
        amount:
          $ref: "#/components/schemas/transactionAmount"
        date:
          $ref: "#/components/schemas/transactionDate"
        author:
          $ref: "#/components/schemas/transactionAuthor"
      description: |
        the public attributes of the transaction, stored in an object

    loanObject:
      type: object
      required:
        - name
        - totalAmount
        - monthlyRate
        - interestRate
        - repaymentDay
        - type
      properties:
        name:
          $ref: "#/components/schemas/loanName"
        totalAmount:
          $ref: "#/components/schemas/loanAmount"
        monthlyRate:
          $ref: "#/components/schemas/loanMonthlyRate"
        interestRate:
          $ref: "#/components/schemas/loanInterestRate"
        repaymentDay:
          $ref: "#/components/schemas/loanRepaymentDay"
        type:
          $ref: "#/components/schemas/loanType"
      description: |
        the public attributes of the loan, stored in an object

